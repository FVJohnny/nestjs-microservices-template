services:
  service-1:
    image: node:22-alpine
    working_dir: /app/services/service-1
    volumes:
      - ${PWD}/backend:/app
      - /app/services/service-1/node_modules
    command: sh -c "npm install && npm run start:dev"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "3001:3000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  service-2:
    image: node:22-alpine
    working_dir: /app/services/service-2
    volumes:
      - ${PWD}/backend:/app
      - /app/services/service-2/node_modules
    command: sh -c "npm install && npm run start:dev"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "3002:3000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  service-3:
    image: python:3.12-slim
    working_dir: /app
    volumes:
      - ${PWD}/backend/services/service-3:/app
    command: sh -c "pip install --upgrade pip && pip install -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      - PORT=8000
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "3003:8000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    image: nginx:alpine
    volumes:
      - ${PWD}/frontend:/usr/share/nginx/html
      - ${PWD}/frontend/nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
    ports:
      - "3000:80"
    networks:
      - backend
    environment:
      - SERVICE_1_URL=http://service-1:3000/
      - SERVICE_2_URL=http://service-2:3000/
      - SERVICE_3_URL=http://service-3:8000/
    depends_on:
      - service-1
      - service-2
      - service-3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  backend:
    driver: bridge
