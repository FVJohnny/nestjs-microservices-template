# syntax=docker/dockerfile:1

# Shared Dockerfile for NestJS services in the monorepo
# Usage: docker build -f docker/Dockerfile.nestjs-service --build-arg SERVICE_NAME=service-1 .

ARG SERVICE_NAME=service-1
ARG NODE_VERSION=22

# --- Builder stage: install deps and build ---
FROM node:${NODE_VERSION}-alpine AS builder
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./
COPY nx.json tsconfig*.json ./
COPY backend/libs backend/libs
COPY backend/services/${SERVICE_NAME} backend/services/${SERVICE_NAME}

# Install all dependencies and build
RUN npm ci && npm run build

# --- Production deps stage: install only production deps ---
FROM node:${NODE_VERSION}-alpine AS prod-deps
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY backend/libs backend/libs
COPY backend/services/${SERVICE_NAME} backend/services/${SERVICE_NAME}

# Install production dependencies only and clean aggressively  
RUN npm ci --omit=dev && \
    npm cache clean --force

# --- Runtime stage: alpine for minimal size ---
FROM node:${NODE_VERSION}-alpine AS runner

# Remove package manager and unnecessary tools to reduce size
RUN rm -rf /usr/local/lib/node_modules/npm /usr/local/lib/node_modules/corepack && \
    rm -f /usr/local/bin/npm /usr/local/bin/npx /usr/local/bin/corepack

WORKDIR /app
ENV NODE_ENV=production

# Add non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy only production node_modules from prod-deps stage
COPY --from=prod-deps --chown=nodejs:nodejs /app/node_modules ./node_modules

# Copy only built dist files (no source)
COPY --from=builder --chown=nodejs:nodejs /app/backend/libs ./backend/libs

# Copy the specific service files using the build arg
ARG SERVICE_NAME
COPY --from=builder --chown=nodejs:nodejs /app/backend/services/${SERVICE_NAME}/dist ./backend/services/${SERVICE_NAME}/dist
COPY --from=builder --chown=nodejs:nodejs /app/backend/services/${SERVICE_NAME}/package*.json ./backend/services/${SERVICE_NAME}/

# Switch to non-root user
USER nodejs

# Set working directory to the specific service
WORKDIR /app/backend/services/${SERVICE_NAME}

EXPOSE 3000

CMD sh -c "node dist/services/${SERVICE_NAME}/src/main.js"