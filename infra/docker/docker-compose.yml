services:
  service-1:
    build:
      context: ${PWD}/backend
      dockerfile: services/service-1/Dockerfile
    image: copy-signals-service-1:latest
    environment:
      - NODE_ENV=production
      - PORT=3000
      - KAFKA_BROKERS=kafka:9092
      - PROXY_BASE_PATH=/api/service-1
    ports:
      - "3001:3000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  service-2:
    build:
      context: ${PWD}/backend
      dockerfile: services/service-2/Dockerfile
    image: copy-signals-service-2:latest
    environment:
      - NODE_ENV=production
      - PORT=3000
      - KAFKA_BROKERS=kafka:9092
      - PROXY_BASE_PATH=/api/service-2
    ports:
      - "3002:3000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  service-3:
    build:
      context: ${PWD}/backend
      dockerfile: services/service-3/Dockerfile
    image: copy-signals-service-3:latest
    environment:
      - NODE_ENV=production
      - PORT=8000
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "3003:8000"
    networks:
      - backend
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    build:
      context: ${PWD}/frontend
      dockerfile: Dockerfile
    image: copy-signals-frontend:latest
    ports:
      - "3000:80"
    networks:
      - backend
    environment:
      - SERVICE_1_URL=http://service-1:3000/
      - SERVICE_2_URL=http://service-2:3000/
      - SERVICE_3_URL=http://service-3:8000/
    depends_on:
      - service-1
      - service-2
      - service-3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  backend:
    driver: bridge
